// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PwebDB.Models.dbModels;

#nullable disable

namespace PwebDB.Migrations
{
    [DbContext(typeof(PerfimeDatabaseContext))]
    [Migration("20241112221231_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoriaOfertum", b =>
                {
                    b.Property<int>("IdOferta")
                        .HasColumnType("int")
                        .HasColumnName("idOferta");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    b.HasKey("IdOferta", "IdCategoria")
                        .HasName("PK__Categori__DD02F61E8F0D1A99");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Categoria_Oferta", (string)null);
                });

            modelBuilder.Entity("CategoriumOfertum", b =>
                {
                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdOferta")
                        .HasColumnType("int");

                    b.HasKey("IdCategoria", "IdOferta");

                    b.ToTable("CategoriumOfertum");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.Calificacion", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<int>("Calificacion1")
                        .HasColumnType("int")
                        .HasColumnName("Calificacion");

                    b.Property<DateTime>("FechaCalificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdUsuario", "IdProducto")
                        .HasName("PK__Califica__542869B5F9F060F8");

                    b.HasIndex("IdProducto");

                    b.ToTable("Calificacion");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.Carrito", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario", "IdProducto")
                        .HasName("PK__Carrito__542869B5D445A0F4");

                    b.HasIndex("IdProducto");

                    b.ToTable("Carrito");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.Categorium", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<int?>("CategoriaPadre")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__8A3D240C40695A0F");

                    b.HasIndex("CategoriaPadre");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.DetalleOrden", b =>
                {
                    b.Property<int>("IdOrden")
                        .HasColumnType("int")
                        .HasColumnName("idOrden");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdOrden", "IdProducto")
                        .HasName("PK__Detalle___F8D5BCE08BDF820E");

                    b.HasIndex("IdProducto");

                    b.ToTable("Detalle_Orden");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.Direccion", b =>
                {
                    b.Property<int>("IdDireccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDireccion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDireccion"));

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Cp")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CP");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<int>("NumeroExt")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroInt")
                        .HasColumnType("int");

                    b.HasKey("IdDireccion")
                        .HasName("PK__Direccio__B49878C9DC842296");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Direccion");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.MarcaPerfume", b =>
                {
                    b.Property<int>("IdMarcaPerfume")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMarcaPerfume");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarcaPerfume"));

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdMarcaPerfume")
                        .HasName("PK__Marca_Pe__1A5431A9EB381E9C");

                    b.ToTable("Marca_Perfume");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.MetodoEntrega", b =>
                {
                    b.Property<int>("IdMetodoEntrega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMetodoEntrega");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMetodoEntrega"));

                    b.Property<string>("Metodo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdMetodoEntrega")
                        .HasName("PK__Metodo_E__568616F927F6EE4D");

                    b.ToTable("Metodo_Entrega");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.MetodoPago", b =>
                {
                    b.Property<int>("IdMetodoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMetodoPago");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMetodoPago"));

                    b.Property<string>("Metodo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdMetodoPago")
                        .HasName("PK__Metodo_P__817BFC3274C1E7AB");

                    b.ToTable("Metodo_Pago");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.Ofertum", b =>
                {
                    b.Property<int>("IdOferta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idOferta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOferta"));

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdOferta")
                        .HasName("PK__Oferta__05A1245E466F9DC2");

                    b.ToTable("Oferta");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.Orden", b =>
                {
                    b.Property<int>("IdOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idOrden");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrden"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdDireccion")
                        .HasColumnType("int")
                        .HasColumnName("idDireccion");

                    b.Property<int>("IdMetodoEntrega")
                        .HasColumnType("int")
                        .HasColumnName("idMetodoEntrega");

                    b.Property<int>("IdMetodoPago")
                        .HasColumnType("int")
                        .HasColumnName("idMetodoPago");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdOrden")
                        .HasName("PK__Orden__C8AAF6F3720A15DF");

                    b.HasIndex("IdDireccion");

                    b.HasIndex("IdMetodoEntrega");

                    b.HasIndex("IdMetodoPago");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Orden");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaAgregado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    b.Property<int>("IdMarcaPerfume")
                        .HasColumnType("int")
                        .HasColumnName("idMarcaPerfume");

                    b.Property<int>("IdTipoPerfume")
                        .HasColumnType("int")
                        .HasColumnName("idTipoPerfume");

                    b.Property<string>("Imagen")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int?>("VolumenEnMl")
                        .HasColumnType("int")
                        .HasColumnName("VolumenEnML");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__07F4A1328E40ADD3");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdMarcaPerfume");

                    b.HasIndex("IdTipoPerfume");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.TipoPerfume", b =>
                {
                    b.Property<int>("IdTipoPerfume")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTipoPerfume");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoPerfume"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdTipoPerfume")
                        .HasName("PK__Tipo_Per__C5B903FDEB6FC3D0");

                    b.ToTable("Tipo_Perfume");
                });

            modelBuilder.Entity("CategoriaOfertum", b =>
                {
                    b.HasOne("PwebDB.Models.dbModels.Categorium", null)
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .IsRequired()
                        .HasConstraintName("FK__Categoria__idCat__59063A47");

                    b.HasOne("PwebDB.Models.dbModels.Ofertum", null)
                        .WithMany()
                        .HasForeignKey("IdOferta")
                        .IsRequired()
                        .HasConstraintName("FK__Categoria__idOfe__5812160E");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("PwebDB.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("PwebDB.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PwebDB.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("PwebDB.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.Calificacion", b =>
                {
                    b.HasOne("PwebDB.Models.dbModels.Producto", "IdProductoNavigation")
                        .WithMany("Calificacions")
                        .HasForeignKey("IdProducto")
                        .IsRequired()
                        .HasConstraintName("FK__Calificac__idPro__5535A963");

                    b.HasOne("PwebDB.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Calificacions")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.Carrito", b =>
                {
                    b.HasOne("PwebDB.Models.dbModels.Producto", "IdProductoNavigation")
                        .WithMany("Carritos")
                        .HasForeignKey("IdProducto")
                        .IsRequired()
                        .HasConstraintName("FK__Carrito__idProdu__5CD6CB2B");

                    b.HasOne("PwebDB.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Carritos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.Categorium", b =>
                {
                    b.HasOne("PwebDB.Models.dbModels.Categorium", "CategoriaPadreNavigation")
                        .WithMany("InverseCategoriaPadreNavigation")
                        .HasForeignKey("CategoriaPadre")
                        .HasConstraintName("FK__Categoria__Categ__3D5E1FD2");

                    b.Navigation("CategoriaPadreNavigation");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.DetalleOrden", b =>
                {
                    b.HasOne("PwebDB.Models.dbModels.Orden", "IdOrdenNavigation")
                        .WithMany("DetalleOrdens")
                        .HasForeignKey("IdOrden")
                        .IsRequired()
                        .HasConstraintName("FK__Detalle_O__idOrd__656C112C");

                    b.HasOne("PwebDB.Models.dbModels.Producto", "IdProductoNavigation")
                        .WithMany("DetalleOrdens")
                        .HasForeignKey("IdProducto")
                        .IsRequired()
                        .HasConstraintName("FK__Detalle_O__idPro__66603565");

                    b.Navigation("IdOrdenNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.Direccion", b =>
                {
                    b.HasOne("PwebDB.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Direccions")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.Orden", b =>
                {
                    b.HasOne("PwebDB.Models.dbModels.Direccion", "IdDireccionNavigation")
                        .WithMany("Ordens")
                        .HasForeignKey("IdDireccion")
                        .IsRequired()
                        .HasConstraintName("FK__Orden__idDirecci__619B8048");

                    b.HasOne("PwebDB.Models.dbModels.MetodoEntrega", "IdMetodoEntregaNavigation")
                        .WithMany("Ordens")
                        .HasForeignKey("IdMetodoEntrega")
                        .IsRequired()
                        .HasConstraintName("FK__Orden__idMetodoE__628FA481");

                    b.HasOne("PwebDB.Models.dbModels.MetodoPago", "IdMetodoPagoNavigation")
                        .WithMany("Ordens")
                        .HasForeignKey("IdMetodoPago")
                        .IsRequired()
                        .HasConstraintName("FK__Orden__idMetodoP__60A75C0F");

                    b.HasOne("PwebDB.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Ordens")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdDireccionNavigation");

                    b.Navigation("IdMetodoEntregaNavigation");

                    b.Navigation("IdMetodoPagoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.Producto", b =>
                {
                    b.HasOne("PwebDB.Models.dbModels.Categorium", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .IsRequired()
                        .HasConstraintName("FK__Producto__idCate__4F7CD00D");

                    b.HasOne("PwebDB.Models.dbModels.MarcaPerfume", "IdMarcaPerfumeNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdMarcaPerfume")
                        .IsRequired()
                        .HasConstraintName("FK__Producto__idMarc__4E88ABD4");

                    b.HasOne("PwebDB.Models.dbModels.TipoPerfume", "IdTipoPerfumeNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdTipoPerfume")
                        .IsRequired()
                        .HasConstraintName("FK__Producto__idTipo__4D94879B");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdMarcaPerfumeNavigation");

                    b.Navigation("IdTipoPerfumeNavigation");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.ApplicationUser", b =>
                {
                    b.Navigation("Calificacions");

                    b.Navigation("Carritos");

                    b.Navigation("Direccions");

                    b.Navigation("Ordens");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.Categorium", b =>
                {
                    b.Navigation("InverseCategoriaPadreNavigation");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.Direccion", b =>
                {
                    b.Navigation("Ordens");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.MarcaPerfume", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.MetodoEntrega", b =>
                {
                    b.Navigation("Ordens");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.MetodoPago", b =>
                {
                    b.Navigation("Ordens");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.Orden", b =>
                {
                    b.Navigation("DetalleOrdens");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.Producto", b =>
                {
                    b.Navigation("Calificacions");

                    b.Navigation("Carritos");

                    b.Navigation("DetalleOrdens");
                });

            modelBuilder.Entity("PwebDB.Models.dbModels.TipoPerfume", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
